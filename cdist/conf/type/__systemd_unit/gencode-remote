#!/bin/sh -e
#
# 2017 Ľubomír Kučera <lubomir.kucera.jr at gmail.com>
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

name="${__object_id}"
state=$(cat "${__object}/parameter/state")
current_enablement_state=$(cat "${__object}/explorer/enablement-state")

if [ "${state}" = "absent" ]; then
    if [ ! -z "${current_enablement_state}" ]; then
        echo "systemctl --now disable ${name}"
        echo "rm -f /etc/systemd/system/${name}"
        echo "systemctl daemon-reload"
    fi

    exit 0
fi

unit_status=$(cat "${__object}/explorer/unit-status")
desired_enablement_state=$(cat "${__object}/parameter/enablement-state")

if [ "${current_enablement_state}" = "masked" ] && \
    [ "${desired_enablement_state}" != "masked" ]; then
    echo "systemctl unmask ${name}"
fi

if [ -f "${__object}/parameter/restart" ]; then
    if [ "${desired_enablement_state}" = "masked" ]; then
        if [ "${unit_status}" = "active" ]; then
            echo "systemctl stop ${name}"
        fi
    elif grep -q "^__file/etc/systemd/system/${name}" "${__messages_in}" || \
        [ "${unit_status}" != "active" ]; then
        echo "systemctl restart ${name} || true"
    fi
fi

if [ "${current_enablement_state}" = "${desired_enablement_state}" ]; then
    exit 0
fi

case "${desired_enablement_state}" in
    "")
        # Do nothing
        :
    ;;
    enabled)
        echo "systemctl enable ${name}"
    ;;
    disabled)
        echo "systemctl disable ${name}"
    ;;
    masked)
        echo "systemctl mask ${name}"
    ;;
    *)
        echo "Unsupported unit status: ${desired_enablement_state}" >&2
        exit 1
    ;;
esac
