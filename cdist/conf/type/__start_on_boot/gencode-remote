#!/bin/sh -e
#
# 2012-2013 Nico Schottelius (nico-cdist at schottelius.org)
# 2016 Daniel Heule (hda at sfs.biz)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#
#

state_should="$(cat "$__object/parameter/state")"
state_is=$(cat "$__object/explorer/state")
init=$(cat "$__global/explorer/init")
target_runlevel="$(cat "$__object/parameter/target_runlevel")"

# Short circuit if nothing is to be done
[ "$state_should" = "$state_is" ] && exit 0

os=$(cat "$__global/explorer/os")
os_version=$(cat "$__global/explorer/os_version")
name="$__object_id"

case "$state_should" in
    present)
        if [ "$init" = 'systemd' ]; then
            # this handles ALL linux distros with systemd
            # e.g. archlinux, gentoo in some cases, new RHEL and SLES versions
            echo "systemctl -q enable '$name'"
        else
            case "$os" in
                debian)
                    case "$os_version" in
                        [1-7]*)
                            echo "update-rc.d '$name' defaults >/dev/null"
                        ;;
                        8*)
                            echo "systemctl enable '$name'"
                        ;;
                        *)
                            echo "Unsupported version $os_version of $os" >&2
                            exit 1
                        ;;
                    esac
                ;;
                devuan)
                    echo "update-rc.d '$name' defaults >/dev/null"
                ;;

                alpine|gentoo)
                    echo "rc-update add '$name' '$target_runlevel'"
                ;;

                amazon|scientific|centos|fedora|owl|redhat|suse)
                    echo "chkconfig '$name' on"
                ;;

                openwrt)
                    # 'enable' can be successful and still return a non-zero exit
                    # code, deal with it by checking for success ourselves in that
                    # case (the || ... part).
                    echo "'/etc/init.d/$name' enable || [ -f /etc/rc.d/S??'$name' ]"
                ;;

                ubuntu)
                    echo "update-rc.d '$name' defaults >/dev/null"
                ;;

                freebsd)
                    :  # handled in manifest
                ;;

                openbsd)
                    # OpenBSD 5.7 and higher
                    echo "rcctl enable '$name'"
                ;;

                *)
                   echo "Unsupported os: $os" >&2
                   exit 1
                ;;
            esac
        fi
    ;;

    absent)
        if [ "$init" = 'systemd' ]; then
            # this handles ALL linux distros with systemd
            # e.g. archlinux, gentoo in some cases, new RHEL and SLES versions
            echo "systemctl -q disable '$name'"

        else
            case "$os" in
                debian|ubuntu|devuan)
                    echo "update-rc.d -f '$name' remove"
                ;;

                alpine|gentoo)
                    echo "rc-update del '$name' '$target_runlevel'"
                ;;

                centos|fedora|owl|redhat|suse)
                    echo "chkconfig '$name' off"
                ;;

                openwrt)
                    echo "'/etc/init.d/$name' disable"
                    ;;

                openbsd)
                    # OpenBSD 5.7 and higher
                    echo "rcctl disable '$name'"
                ;;

                *)
                   echo "Unsupported os: $os" >&2
                   exit 1
                ;;
            esac
        fi
    ;;

    *)
        echo "Unknown state: $state_should" >&2
        exit 1
    ;;
esac
