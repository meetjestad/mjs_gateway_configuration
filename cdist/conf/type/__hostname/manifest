#!/bin/sh -e
#
# 2012 Steven Armstrong (steven-cdist at armstrong.cc)
# 2014 Nico Schottelius (nico-cdist at schottelius.org)
# 2019 Dennis Camera (dennis.camera at ssrq-sds-fds.ch)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

set_hostname_systemd() {
    echo "$1" | __file /etc/hostname --source -
}

os=$(cat "${__global:?}/explorer/os")

max_len=$(cat "${__object:?}/explorer/max_len")
has_hostnamectl=$(cat "${__object:?}/explorer/has_hostnamectl")

if test -s "${__object:?}/parameter/name"
then
    name_should=$(cat "${__object:?}/parameter/name")
else
    case ${os}
    in
        # RedHat-derivatives and BSDs
        (centos|fedora|redhat|scientific|freebsd|netbsd|openbsd|slackware|suse)
            # Hostname is FQDN
            name_should=${__target_host:?}
            ;;
        *)
            # Hostname is only first component of FQDN on all other systems.
            name_should=${__target_host:?}
            name_should=${name_should%%.*}
            ;;
    esac
fi

if test -n "${max_len}" && test "$(printf '%s' "${name_should}" | wc -c)" -gt "${max_len}"
then
    printf "Host name too long. Up to %u characters allowed.\n" "${max_len}" >&2
    exit 1
fi

case ${os}
in
    (alpine|debian|devuan|ubuntu|void)
        echo "${name_should}" | __file /etc/hostname --source -
        ;;
    (archlinux)
        if test -n "${has_hostnamectl}"
        then
            set_hostname_systemd "${name_should}"
        else
            echo 'Ancient ArchLinux variants without hostnamectl are not supported.' >&2
            exit 1
            # Only for ancient ArchLinux, write to /etc/rc.conf on pre-systemd
            # versions.  There are some versions which use /etc/hostname but not
            # systemd. It is unclear which ones these are.

            # __key_value '/etc/rc.conf:HOSTNAME' \
            #     --file /etc/rc.conf \
            #     --delimiter '=' --exact_delimiter \
            #     --key 'HOSTNAME' \
            #     --value "\"$name_should\""
        fi
        ;;
    (centos|fedora|redhat|scientific)
        if test -z "${has_hostnamectl}"
        then
            # Only write to /etc/sysconfig/network on non-systemd versions.
            # On systemd-based versions this entry is ignored.
            __key_value '/etc/sysconfig/network:HOSTNAME' \
                --file /etc/sysconfig/network \
                --delimiter '=' --exact_delimiter \
                --key HOSTNAME \
                --value "\"${name_should}\""
        else
            set_hostname_systemd "${name_should}"
        fi
        ;;
    (gentoo)
        # Only write to /etc/conf.d/hostname on OpenRC-based installations.
        # On systemd use hostnamectl(1) in gencode-remote.
        if test -z "${has_hostnamectl}"
        then
            __key_value '/etc/conf.d/hostname:hostname' \
                --file /etc/conf.d/hostname \
                --delimiter '=' --exact_delimiter \
                --key 'hostname' \
                --value "\"${name_should}\""
        else
            set_hostname_systemd "$name_should"
        fi
        ;;
    (freebsd)
        __key_value '/etc/rc.conf:hostname' \
            --file /etc/rc.conf \
            --delimiter '=' --exact_delimiter \
            --key 'hostname' \
            --value "\"${name_should}\""
        ;;
    (macosx)
        # handled in gencode-remote
        ;;
    (netbsd)
        __key_value '/etc/rc.conf:hostname' \
            --file /etc/rc.conf \
            --delimiter '=' --exact_delimiter \
            --key 'hostname' \
            --value "\"${name_should}\""

        # To avoid confusion, ensure that the hostname is only stored once.
        __file /etc/myname --state absent
        ;;
    (openbsd)
        echo "${name_should}" | __file /etc/myname --source -
        ;;
    (openwrt)
        __uci system.@system[0].hostname --value "${name_should}"
            # --transaction hostname
        ;;
    (slackware)
        # We write the FQDN into /etc/HOSTNAME.  But /etc/rc.d/rc.M will only
        # read the first component from this file and set it as the running
        # hostname on boot.
        echo "${name_should}" | __file /etc/HOSTNAME --source -
        ;;
    (solaris)
        echo "${name_should}" | __file /etc/nodename --source -
        ;;
    (suse)
        if test -s "${__global:?}/explorer/os_release"
        then
            # shellcheck source=/dev/null
            os_version=$(. "${__global:?}/explorer/os_release" && echo "${VERSION}")
        else
            os_version=$(sed -n 's/^VERSION\ *=\ *//p' "${__global:?}/explorer/os_version")
        fi
        os_major=$(expr "${os_version}" : '\([0-9]\{1,\}\)')

        # Classic SuSE stores the FQDN in /etc/HOSTNAME, while
        # systemd does not. The running hostname is the first
        # component in both cases.
        # In versions before 15.x, the FQDN is stored in /etc/hostname.
        if test -n "${has_hostnamectl}" \
                && test "${os_major}" -ge 15 \
                && test "${os_major}" -ne 42
        then
            # strip away everything but the first part from $name_should
            name_should=${name_should%%.*}
        fi

        # Modern SuSE provides /etc/HOSTNAME as a symlink for
        # backwards-compatibility. Unfortunately it cannot be used
        # here as __file does not follow the symlink.
        # Therefore, we use the presence of the hostnamectl binary as
        # an indication of which file to use.  This unfortunately does
        # not work correctly on openSUSE 12.x which provides
        # hostnamectl but not /etc/hostname.

        if test -n "${has_hostnamectl}" -a "${os_major}" -gt 12
        then
            hostname_file=/etc/hostname
        else
            hostname_file=/etc/HOSTNAME
        fi

        echo "${name_should}" | __file "${hostname_file}" --source -
        ;;
    (*)
        # On other operating systems we fall back to systemd's
        # hostnamectl if availableâ€¦
        if test -n "${has_hostnamectl}"
        then
            set_hostname_systemd "${name_should}"
        else
            echo "Your operating system (${os}) is currently not supported by this type (${__type##*/})." >&2
            echo "Please contribute an implementation for it if you can." >&2
            exit 1
        fi
        ;;
esac
